version: "3.8"

services:
  postgres:
    image: "postgres:17"
    environment:
      - "POSTGRES_DB=${POSTGRES_DB}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
      - "POSTGRES_USER=${POSTGRES_USER}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - keycloak-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    command: |
      bash -c '
      set -e
      docker-entrypoint.sh postgres &
      until pg_isready -U ${POSTGRES_USER} -d postgres; do
        echo "Waiting for PostgreSQL to be ready..."
        sleep 1
      done
      psql -v ON_ERROR_STOP=0 -U ${POSTGRES_USER} -d ${POSTGRES_DB} <<-EOSQL
        CREATE SCHEMA IF NOT EXISTS keycloak;
      EOSQL
      wait $!
      '

  keycloak:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        THEME_NAME: ${THEME_NAME}
        REALM_NAME: ${EXPORT_REALM}
    environment:
      - BASE_URL=${BASE_URL}
      - KC_HEALTH_ENABLED=${KC_HEALTH_ENABLED}
      - KC_HTTP_ENABLED=${KC_HTTP_ENABLED}
      - KC_HOSTNAME_STRICT=${KC_HOSTNAME_STRICT}
      - KC_DB=${KC_DB}
      - KC_DB_URL=${KC_DB_URL}
      - KC_DB_SCHEMA=${KC_DB_SCHEMA}
      - KC_DB_USERNAME=${KC_DB_USERNAME}
      - KC_DB_PASSWORD=${KC_DB_PASSWORD}
      - KC_BOOTSTRAP_ADMIN_USERNAME=${KC_BOOTSTRAP_ADMIN_USERNAME}
      - KC_BOOTSTRAP_ADMIN_PASSWORD=${KC_BOOTSTRAP_ADMIN_PASSWORD}
    ports:
      - "8090:8080"
    depends_on:
      - postgres
    networks:
      - keycloak-network

  keycloak-export:
    image: quay.io/keycloak/keycloak:26.0
    profiles:
      - debug
    environment:
      - KC_HEALTH_ENABLED=${KC_HEALTH_ENABLED}
      - KC_DB=${KC_DB}
      - KC_DB_URL=${KC_DB_URL}
      - KC_DB_SCHEMA=${KC_DB_SCHEMA}
      - KC_DB_USERNAME=${KC_DB_USERNAME}
      - KC_DB_PASSWORD=${KC_DB_PASSWORD}
      - KC_BOOTSTRAP_ADMIN_USERNAME=${KC_BOOTSTRAP_ADMIN_USERNAME}
      - KC_BOOTSTRAP_ADMIN_PASSWORD=${KC_BOOTSTRAP_ADMIN_PASSWORD}
    volumes:
      - ./config:/opt/keycloak/data/export
    depends_on:
      - postgres
    networks:
      - keycloak-network
    command:
      - export
      - --file=${EXPORT_FILE}
      - --realm=${EXPORT_REALM}

networks:
  keycloak-network:
    driver: bridge

volumes:
  postgres_data:
